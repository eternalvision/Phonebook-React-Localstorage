{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Section/Section.module.css","Components/Filter/Filter.module.css","Components/Section/Section.js","redux/actions.js","redux/selectors.js","Components/ContactList/ContactList.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","Section","title","children","className","styles","section","defaultProps","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","getContacts","state","contacts","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","dispatch","useDispatch","map","contact","links","type","btn","onClick","actions","ContactForm","useState","setName","setNumber","resetName","resetNumber","form","onSubmit","event","preventDefault","includeName","reduce","acc","includeNumber","alert","newContact","label","onChange","currentTarget","value","input","pattern","required","placeholder","Filter","target","App","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","phonebookReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.616748bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"links\":\"ContactList_links__B_bZ-\",\"btn\":\"ContactList_btn__3ee7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3AG6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3dsth\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.section}>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: \"\",\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\nexport default Section;\n","import { createAction } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\n\n//TOOLKIT - 2\nexport const addContact = createAction(\"contacts/add\", (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction(\"contacts/delete\");\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n// REDUX - 1\n// import * as actionTypes from './types';\n\n// export const addContact = (name, number) => ({\n//   type: actionTypes.ADD_CONTACT,\n//   payload: {\n//     id: shortid.generate(),\n//     name,\n//     number,\n//   },\n// });\n\n// export const deleteContact = contactId => ({\n//   type: actionTypes.DELETE_CONTACT,\n//   payload: contactId,\n// });\n\n// export const changeFilter = value => ({\n//   type: actionTypes.CHANGE_FILTER,\n//   payload: value,\n// });\n","export const getContacts = (state) => state.contacts.contacts;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/actions\";\nimport { getVisibleContacts } from \"../../redux/selectors\";\nimport styles from \"./ContactList.module.css\";\n\n//TOOLKIT - 2\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = (id) => dispatch(actions.deleteContact(id));\n\n  return (\n    <ul>\n      {contacts.map((contact) => (\n        <li className={styles.links} key={contact.id}>\n          <p>\n            {contact.name} : {contact.number}\n          </p>\n          <button type=\"button\" className={styles.btn} onClick={() => onDeleteContact(contact.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n//REDUX - 1\n// import { connect } from 'react-redux';\n\n// const getVisibleContacts = (allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return allContacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// const mapStateToProps = ({ contacts: { contacts, filter } }) => ({\n//   contacts: getVisibleContacts(contacts, filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteContact: id => dispatch(actions.deleteContact(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/actions\";\nimport { getContacts } from \"../../redux/selectors\";\nimport styles from \"./ContactForm.module.css\";\n\n//TOOLKIT - 2\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const newContact = () => {\n    const includeName = contacts.reduce((acc, contact) => [...acc, contact.name], []);\n    const includeNumber = contacts.reduce((acc, contact) => [...acc, contact.number], []);\n\n    if (name === \"\" || number === \"\") {\n      alert(\"Please enter all fields!\");\n      return true;\n    }\n\n    if (includeName.includes(name)) {\n      alert(`${name} is already in contacts`);\n      return true;\n    } else if (includeNumber.includes(number)) {\n      alert(`${number} is already in contacts`);\n      return true;\n    }\n  };\n\n  const handleChangeName = (event) => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleChangeNumber = (event) => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    resetName();\n    resetNumber();\n\n    if (newContact()) {\n      return;\n    }\n\n    dispatch(actions.addContact(name, number));\n  };\n\n  const resetName = () => {\n    setName(\"\");\n  };\n  const resetNumber = () => {\n    setNumber(\"\");\n  };\n\n  return (\n    <>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <label className={styles.label}>Name</label>\n        <input\n          onChange={handleChangeName}\n          type=\"text\"\n          name=\"name\"\n          className={styles.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Enter Name\"\n        ></input>\n\n        <label className={styles.label}>Number</label>\n        <input\n          onChange={handleChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          className={styles.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"Enter your number\"\n        />\n\n        <button type=\"submit\" className={styles.btn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\n// REDUX - 1\n// const mapStateToProps = state => ({\n//   contacts: state.contacts.contacts,\n// });\n\n// const mapToDispatchToProps = dispatch => ({\n//   onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\n// });\n\n// export default connect(mapStateToProps, mapToDispatchToProps)(ContactForm);\n","import styles from \"./Filter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors\";\nimport * as actions from \"../../redux/actions\";\n\n//TOOLKIT - 2\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = (event) => dispatch(actions.changeFilter(event.target.value));\n\n  return (\n    <input\n      onChange={onChange}\n      type=\"text\"\n      name=\"filter\"\n      id=\"filter\"\n      value={value}\n      className={styles.filter}\n      placeholder=\"Enter name to find\"\n    ></input>\n  );\n}\n\n//REDUX - 1\n// import { connect } from 'react-redux';\n\n// const mapStateToProps = state => ({\n//   value: state.contacts.filter,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: event => dispatch(actions.changeFilter(event.target.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport Section from \"./Components/Section/Section\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport Filter from \"./Components/Filter/Filter\";\n\nconst App = () => {\n  //  componentDidMount() {\n  //   const items = localStorage.getItem(\"contacts\");\n  //   if (items) {\n  //    const parsedContacts = JSON.parse(items);\n  //    this.setState({ contacts: parsedContacts });\n  //   }\n  //  }\n\n  //  componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.contacts !== this.state.contacts) {\n  //    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  //   }\n  //  }\n\n  return (\n    <>\n      <Section title={\"Phonebook\"}>\n        <ContactForm />\n      </Section>\n\n      <Section title={\"Contacts\"}>\n        <Filter />\n\n        <ContactList />\n      </Section>\n    </>\n  );\n};\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n// import { configureStore } from '@reduxjs/toolkit';\nimport * as actions from \"./actions\";\n\n//TOOLKIT - 2\nconst contacts = createReducer(\n  [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ],\n  {\n    [actions.addContact]: (state, { payload }) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n  }\n);\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n\n//REDUX - 1\n// import * as actionTypes from './types';\n\n// const contacts = (\n//   state = [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//   ],\n//   { type, payload },\n// ) => {\n//   switch (type) {\n//     case actionTypes.ADD_CONTACT:\n//       return [...state, payload];\n\n//     case actionTypes.DELETE_CONTACT:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n","import { configureStore, getDefaultMiddleware, combineReducers } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport phonebookReducer from \"./reducer\";\n\n//TOOLKIT - 2\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst rootReducer = combineReducers({\n  contacts: phonebookReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n\n//Redux - 1\n// import { combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension'; //Redux - 1\n\n// const rootReducer = combineReducers({\n//   contacts: phonebookReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1G6xw\",\"label\":\"ContactForm_label__2OkhY\",\"input\":\"ContactForm_input__3tf2S\",\"btn\":\"ContactForm_btn__2U8nd\"};"],"sourceRoot":""}